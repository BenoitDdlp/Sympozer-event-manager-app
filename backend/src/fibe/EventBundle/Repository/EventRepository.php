<?php

namespace fibe\EventBundle\Repository;

use DateTime;
use Doctrine\ORM\EntityRepository;

/**
 * EventRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EventRepository extends EntityRepository
{


    /**
     * filtering with all parameters defined
     * @param $qb , query builder to add the filter to
     * @param $params , the field to filter on
     * @return $qb, modified query builder
     */
    public function filter($qb, $params)
    {
        if (isset($params['mainEventId']))
        {
            $qb->andWhere('qb.mainEvent = :mainEventId');
            $qb->setParameter('mainEventId', $params['mainEventId']);
        }

        if (isset($params['id']))
        {
            $qb
                ->andWhere('qb.id = :id')
                ->setParameter('id', $params['id']);
        }

        if (isset($params['start']) && isset($params['end']))
        {
            $start = new DateTime($params['start']);
            $end = new DateTime($params['end']);

            $qb
                ->andWhere('qb.startAt BETWEEN :start AND :end')
                ->andWhere('qb.endAt BETWEEN :start AND :end')
                ->orWhere('qb.startAt IS NULL')
                ->setParameter('start', $start)
                ->setParameter('end',  $end);
        }

        if (isset($params['categoryId']))
        {
            $qb->leftJoin('qb.category', 'c')
                ->andWhere('c.id = :categoryId')
                ->setParameter('categoryId', $params['categoryId']);
        }


        if (isset($params['topicId']))
        {
            $qb->leftJoin('qb.topics', 'topic')
                ->andWhere('topic.id = :topicId')
                ->setParameter('topicId', $params['topicId']);
        }
        return $qb;
    }

}